using System.Net;
using System.Net.Mail;
using UniversityMonitoring.Data.Entities;

namespace UniversitiesMonitoring.NotifyService.Notifying;

internal class EmailNotifyStrategy : INotifyStrategy
{
    private readonly SmtpClient _emailClient;
    private readonly MailAddress _mailAddress;
    
    public EmailNotifyStrategy(IConfiguration configuration)
    {
        var address = configuration["Email:Username"];
        _mailAddress = new MailAddress(address);
        _emailClient = new SmtpClient()
        {
            Host = "smtp.gmail.com",
            Port = 587,
            Credentials = new NetworkCredential(address, configuration["Email:Password"]),
            EnableSsl = true
        };
    }
    
    public async Task NotifyAsync(UserEntity userEntity, UniversityServiceEntity serviceEntity)
    {
        if (userEntity.Email == null) return;
        var message = CreateMailMessage(serviceEntity.ServiceName, serviceEntity.IsOnline);
        message.To.Add(userEntity.Email);
        
        await _emailClient.SendMailAsync(message);
    }

    private MailMessage CreateMailMessage(string serviceName, bool isOnline) =>
        new()
        {
            From = _mailAddress,
            Subject = "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞",
            Body =
                $"<b>üì¢ –°–µ—Ä–≤–∏—Å {serviceName} –∏–∑–º–µ–Ω–∏–ª —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ {(isOnline ? "–æ–Ω–ª–∞–π–Ω üü¢" : "–æ—Ñ–ª–∞–π–Ω üî¥")}</b>\n" +
                "–î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, —Ç.–∫. –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. –ï—Å–ª–∏ –í–∞–º –Ω–µ –Ω—É–∂–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω—ë–º –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç –Ω–µ–≥–æ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è",
            IsBodyHtml = true
        };
}