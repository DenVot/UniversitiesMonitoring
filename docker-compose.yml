version: '3'

services:
  api:
    depends_on:
      - db
    networks:
      - um-network
    container_name: umapi
    image: "um-api"
    build:
      context: "."
      dockerfile: "UniversitiesMonitoring.Api/Dockerfile"
    environment:
      - ASPNETCORE_ENVIRONMENT=${RUNTIME_ENV}
      - CONNECTION_STRING=Server=mysql;User=root;Password=${MYSQL_PASSWORD};Database=universities_monitoring
      - JWT_SECRET=${JWT_SECRET}
      - TRUSTED_HOSTS=umapi
    restart: always
    ports:
      - "80:80"
  notify-service:
    depends_on:
      - api
    restart: always
    networks:
      - um-network
    container_name: umnotify
    image: "um-notify"
    build:
      context: "."
      dockerfile: "UniversitiesMonitoring.NotifyService/Dockerfile"
    environment:
      - DOTNET_ENVIRONMENT=${RUNTIME_ENV}
      - WS_URL=ws://umapi:80/api/updates-socket
      - API_URL=http://umapi:80/
      - EMAIL_ADDRESS=${EMAIL_ADDRESS}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
  monitoring-service:
    depends_on:
      - api
    networks:
      - um-network
    restart: always
    container_name: ummonitoring
    image: "um-mon"
    build:
      context: "."
      dockerfile: "UniversitiesMonitoring.MonitoringService/Dockerfile"
    environment:
      - DOTNET_ENVIRONMENT=${RUNTIME_ENV}
      - API_URL=http://umapi:80/
  db:
    networks:
      - um-network
    container_name: mysql
    image: "mysql"
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      
networks:
  um-network:
    name: um-network